package practica;

import java.awt.Component;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.media.Buffer;
import javax.media.Manager;
import javax.media.MediaLocator;
import javax.media.Player;
import javax.media.control.*;
import javax.media.format.VideoFormat;
import javax.media.util.BufferToImage;
import static sun.audio.AudioPlayer.player;


public class VentanaInternaJMF extends javax.swing.JInternalFrame {

    Player player_jmf = null;
    File file;
    boolean reproducir = false;
    VentanaPrincipal vp;

    public VentanaInternaJMF(File f,VentanaPrincipal vp) {
        initComponents();
        String ex_au = ".au";
        MediaLocator ml = null;
        this.file = f;
        this.vp=vp;
        
        try {

            ml = new MediaLocator("file:" + f.getAbsolutePath());

            if (ml != null) {
                player_jmf = Manager.createRealizedPlayer(ml);
                Component areaVisual = player_jmf.getVisualComponent();
                if (areaVisual != null) {
                    this.add(areaVisual, java.awt.BorderLayout.CENTER);
                }
                Component panelControl = player_jmf.getControlPanelComponent();
                if (panelControl != null) {
                    this.add(panelControl, java.awt.BorderLayout.SOUTH);
                }

            }
            this.pack();
        } catch (Exception ex) {
        }

    }

    public static VentanaInternaJMF getInstance(File f,VentanaPrincipal vp) {
        VentanaInternaJMF v = new VentanaInternaJMF(f,vp);

        if (v.player_jmf != null) {
            System.out.println("Abre el video");
            return v;
        } else {
            return null;
        }

    }

    public void close() {

        player_jmf.close();

        this.removeAll();
        player_jmf = null;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_botones = new javax.swing.JPanel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        panel_botones.setLayout(new java.awt.GridLayout(1, 0));
        getContentPane().add(panel_botones, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        this.close();
    }//GEN-LAST:event_formInternalFrameClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panel_botones;
    // End of variables declaration//GEN-END:variables
}
